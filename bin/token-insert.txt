arbore:
Find:<prop type="token-prefGroup" val="(.*?)"/>\s*?<prop type="token-selGroup" val="(.*?)"/>\s*?<prop type="token-stem" val="(.*?)"/>\s*?              <prop type="token-suffix" val="(.*?)"/>
Replace:<prop type="token-prefGroup" val="\1"/><prop type="token-selGroup" val="\2"/>\n<prop type="token-stem" val="\3"/>\n<prop type="token-suffix" val="\4"/>\n<prop type="token" val="\2 \1-\3-\4"/>

Find:<prop type="token-prefGroup" val="(.*?)"/>\s*?<prop type="token-selGroup" val="(.*?)"/>\s*?<prop type="token-stem" val="(.*?)"/>
Replace:<prop type="token-prefGroup" val="\1"/><prop type="token-selGroup" val="\2"/>\n<prop type="token-stem" val="\3"/>\n<prop type="token" val="\2 \1-\3"/>

Find:<prop type="token-selGroup" val="(.*?)"/>\s*?<prop type="token-stem" val="(.*?)"/>\s*?    <prop type="token-suffix" val="(.*?)"/>
Replace:<prop type="token-selGroup" val="\1"/>\n<prop type="token-stem" val="\2"/>\n<prop type="token-suffix" val="\3"/>\n<prop type="token" val="\1 \2-\3"/>

Find:<prop type="token-selGroup" val="(.*?)"/>\s*?<prop type="token-stem" val="(.*?)"/>\s*?</term>
Replace:<prop type="token-selGroup" val="\1"/>\n<prop type="token-stem" val="\2"/>\n<prop type="token" val="\1 \2"/>\n</term>

geez:
Find:<prop type="token-stem" val="(.*?)"/>\s*?<prop type="token-suff" val="(.*?)"/>
Replace:<prop type="token-pref" val=""/>\n <prop type="token-stem" val="\1"/>\n<prop type="token-suff" val="\2"/>

Find:<prop type="token-pref" val="(.*?)"/>\s*?<prop type="token-stem" val="(.*?)"/>\s*?<prop type="token-suff" val="(.*?)"/>
Replace:<prop type="token-pref" val="\1"/><prop type="token-stem" val="\2"/>\n<prop type="token-suff" val="\3"/>\n<prop type="token" val="\1-\2-\3"/>

Find:<prop type="token-stem" val="(.*?)"/>\s*?<prop type="token-suff" val="(.*?)"/>
Replace:<prop type="token-pref" val=""/>\n <prop type="token-stem" val="\1"/>\n<prop type="token-suff" val="\2"/>

Find:<prop type="token-pro" val="(.*?)"/>\s*?<prop type="token-aux" val="(.*?)"/>\s*?<prop type="token-main" val="(.*?)"/>\s*?</term>
Replace:<prop type="token-pro" val="\1"/>\n<prop type="token-aux" val="\2"/>\n<prop type="token-main" val="\3"/>\n<prop type="token" val="\3 \1 \2"/>\n</term>

Find:<prop type="token-aux" val="(.*?)"/>\s*?<prop type="token-pro" val="(.*?)"/>\s*?<prop type="token-main" val="(.*?)"/>\s*?</term>
Replace:<prop type="token-aux" val="\1"/>\n<prop type="token-pro" val="\2"/>\n<prop type="token-main" val="\3"/>\n<prop type="token" val="\3 \2 \1"/>\n</term>

Find:<prop type="token-main" val="(.*?)"/>\s*?<prop type="token-aux" val="(.*?)"/>\s*?<prop type="token-pro" val="(.*?)"/>\s*?</term>
Replace:<prop type="token-main" val="\1"/>\n<prop type="token-aux" val="\2"/>\n<prop type="token-pro" val="\3"/>\n<prop type="token" val="\1 \3 \2"/>\n</term>

Find:<common-properties>(.*?)<prop type="token" val="(.*?)"/>(.*?)</common-properties>\s*?<termcluster>\s*?<term id="(.*?)"/>
Replace: <common-properties>\1\3</common-properties>\n<termcluster>\n<term id="\4">\n<prop type="token" val="\2"/>\n</term>

Find:<common-properties>
(.*?)<prop type="token" val="(.*?)"/>
(.*?)</common-properties>
\s*<termcluster>
\s*<term id="([\w-]*?)"/>
