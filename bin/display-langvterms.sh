#!/bin/sh

# usage: display-langsvterms.sh <dir> qstring qlabel output
# rev 11/12/13

# The script is designed to list tokens and values in each of the specified languages in which a set of one or more prop=val equivalences (co)-occur. [Props can easily be added to the query, but are omitted here for compactness of output; presupposition is that each value is uniquely associated with a prop.] This is a more detailed output version of the display generated by display-langspropval.sh. 

# The script first uses qlabel to name the response (tsv) and template files, and calls qstring-terms2template.pl to form the query template from a qstring with one or more prop=val equations, separated by a comma:
#     prop1=val1,prop2=val2, . . .
# Indicating that the query template should return the token and all the relevant "val" terms from each queried language satisfying the propN=valN equations.
# Finally, if a fourth "prop" argument with the value "yes" is included, the query will  return a full "prop=val" form for each term.

# Sample $qstring:
# person=Person2,gender=Fem
# I.e., "What tokens and values in this language are 2f?
# Alternate $qstring:
# person=Person2,gender=Fem,?prop=prop
# I.e., "Give all the terms, with their values, which are 2f."
# The template is then applied to each language in the data/[LANG] set, and the response added to the response file.
# The final response file is formatted into  a display by langspv-termstsv2table.pl .

# example: 
#  bin/display-langsvterms.sh "data/beja-arteiga data/beja-atmaan" person=Person2,gender=Fem langpvterms-trial yes 

. bin/constants.sh

# After starting the server with fuseki.sh, first copy the query files;
qstring=$2
qlabel=$3
prop=$4
template=sparql/templates/$qlabel.template
response=tmp/prop-val/$qlabel-resp.tsv
localqry=tmp/prop-val/$qlabel.rq

echo "Query String = $qstring"
echo "Template = $template"
echo "Response = $response"
echo "Display Property Names = $prop"
#echo " "
#echo "Title = $title"
rm $response

if test $prop = "yes" 
then
	perl pl/qstring-pvterms2template.pl $qstring $template
else 
	perl pl/qstring-vterms2template.pl $qstring $template
fi

fs=`find $1 -name *edn`
for f in $fs
do
	#echo "f is $f"
	lang=`basename ${f%-pdgms\.edn}`;
	abb=`grep $lang bin/lname-pref.txt`
    Lang="${lang[@]^}"
    localqry="tmp/prop-val/${qlabel}.$lang.rq"
	echo "Localqry = $localqry"
    sed -e "s/%lang%/${lang}/g" -e "s/%Lang%/${Lang}/g" $template > $localqry
    ${FUSEKIDIR}/s-query --output=tsv --service http://localhost:3030/aama/query --query=$localqry >> $response
done
# Format with following if want row with single token and all vals in comma-separated list;

if test $prop = "yes" 
then
	perl pl/langs-pvtermstsv2table.pl $response $qstring
else
	perl pl/langs-vtermstsv2table.pl $response $qstring
fi
# If want rows  with repeated token and single value, use following:
#perl pl/langspvtsv2table.pl $response

